-- AUTHOR
CREATE IF NOT EXIST TABLE AUTHOR
(
  AUTHOR_ID NUMBER(20) NOT NULL
, AUTHOR_NAME NVARCHAR2(30) NOT NULL
, EXPIRED TIMESTAMP
, CONSTRAINT AUTHOR_PK PRIMARY KEY
  (
    AUTHOR_ID
  )
  ENABLE
);
CREATE SEQUENCE AUTHOR_SEQ2;

CREATE TRIGGER AUTHOR_TRG
BEFORE INSERT ON AUTHOR
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.AUTHOR_ID IS NULL THEN
      SELECT AUTHOR_SEQ2.NEXTVAL INTO :NEW.AUTHOR_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


-- ROLE
CREATE TABLE ROLE
(
  ROLE_ID NUMBER(20) NOT NULL
, ROLE_NAME VARCHAR2(50) NOT NULL
, CONSTRAINT ROLE_PK PRIMARY KEY
  (
    ROLE_ID
  )
  ENABLE
);
CREATE SEQUENCE ROLE_SEQ;

CREATE TRIGGER ROLE_TRG
BEFORE INSERT ON ROLE
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ROLE_ID IS NULL THEN
      SELECT ROLE_SEQ.NEXTVAL INTO :NEW.ROLE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;



-- USERS
CREATE TABLE USERS
(
  USER_ID NUMBER(20) NOT NULL
, ROLE_ID NUMBER(20) NOT NULL
, USER_NAME NVARCHAR2(50) NOT NULL
, LOGIN VARCHAR2(30) NOT NULL
, PASSWORD VARCHAR2(30) NOT NULL
, CONSTRAINT USERS_PK PRIMARY KEY
  (
    USER_ID
  )
  ENABLE
);
ALTER TABLE USERS
ADD CONSTRAINT US_LOGIN_UK UNIQUE
(
  LOGIN
)
ENABLE;

ALTER TABLE USERS
ADD CONSTRAINT US_ROLE_FK FOREIGN KEY
(
  ROLE_ID
)
REFERENCES ROLE
(
  ROLE_ID
)
ENABLE;

CREATE SEQUENCE USERS_SEQ;

CREATE TRIGGER USERS_TRG
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.USER_ID IS NULL THEN
      SELECT USERS_SEQ.NEXTVAL INTO :NEW.USER_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


-- NEWS
CREATE TABLE NEWS
(
  NEWS_ID NUMBER(20) NOT NULL
, TITLE NVARCHAR2(30) NOT NULL
, SHORT_TEXT NVARCHAR2(100) NOT NULL
, FULL_TEXT NVARCHAR2(2000) NOT NULL
, CREATION_DATE TIMESTAMP NOT NULL
, MODIFICATION_DATE DATE NOT NULL
, CONSTRAINT NEWS_PK PRIMARY KEY
  (
    NEWS_ID
  )
  ENABLE
);
CREATE SEQUENCE NEWS_SEQ;

CREATE TRIGGER NEWS_TRG
BEFORE INSERT ON NEWS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.NEWS_ID IS NULL THEN
      SELECT NEWS_SEQ.NEXTVAL INTO :NEW.NEWS_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


-- COMMENTS
CREATE TABLE COMMENTS
(
  COMMENT_ID NUMBER(20) NOT NULL
, NEWS_ID NUMBER(20) NOT NULL
, COMMENT_TEXT NVARCHAR2(100) NOT NULL
, CREATION_DATE TIMESTAMP NOT NULL
, CONSTRAINT COMMENTS_PK PRIMARY KEY
  (
    COMMENT_ID
  )
  ENABLE
);

ALTER TABLE COMMENTS
ADD CONSTRAINT CO_NEWS_FK FOREIGN KEY
(
  NEWS_ID
)
REFERENCES NEWS
(
  NEWS_ID
)
ON DELETE CASCADE ENABLE;
CREATE SEQUENCE COMMENTS_SEQ;

CREATE TRIGGER COMMENTS_TRG
BEFORE INSERT ON COMMENTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.COMMENT_ID IS NULL THEN
      SELECT COMMENTS_SEQ.NEXTVAL INTO :NEW.COMMENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;



-- NEWS_AUTHOR
CREATE TABLE NEWS_AUTHOR
(
  NEWS_ID NUMBER(20) NOT NULL
, AUTHOR_ID NUMBER(20) NOT NULL
);

ALTER TABLE NEWS_AUTHOR
ADD CONSTRAINT NA_AUTHOR_FK FOREIGN KEY
(
  AUTHOR_ID
)
REFERENCES AUTHOR
(
  AUTHOR_ID
)
ON DELETE CASCADE ENABLE;

ALTER TABLE NEWS_AUTHOR
ADD CONSTRAINT NA_NEWS_FK FOREIGN KEY
(
  NEWS_ID
)
REFERENCES NEWS
(
  NEWS_ID
)
ON DELETE CASCADE ENABLE;
ALTER TABLE NEWS_AUTHOR
ADD CONSTRAINT NEWS_TAG_PK PRIMARY KEY
(
  NEWS_ID
, TAG_ID
)
ENABLE;


-- TAG
CREATE TABLE TAG
(
  TAG_ID NUMBER(20) NOT NULL
, TAG_NAME NVARCHAR2(30) NOT NULL
, CONSTRAINT TAG_PK PRIMARY KEY
  (
    TAG_ID
  )
  ENABLE
);
CREATE SEQUENCE TAG_SEQ;

CREATE TRIGGER TAG_TRG
BEFORE INSERT ON TAG
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.TAG_ID IS NULL THEN
      SELECT TAG_SEQ.NEXTVAL INTO :NEW.TAG_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;



-- NEWS_TAG
CREATE TABLE NEWS_TAG
(
  NEWS_ID NUMBER(20) NOT NULL
, TAG_ID NUMBER(20) NOT NULL
);

ALTER TABLE NEWS_TAG
ADD CONSTRAINT NT_NEWS_FK FOREIGN KEY
(
  NEWS_ID
)
REFERENCES NEWS
(
  NEWS_ID
)
ON DELETE CASCADE ENABLE;

ALTER TABLE NEWS_TAG
ADD CONSTRAINT NT_TAG_FK FOREIGN KEY
(
  TAG_ID
)
REFERENCES TAG
(
  TAG_ID
)
ON DELETE CASCADE ENABLE;

ALTER TABLE NEWS_TAG
ADD CONSTRAINT NEWS_TAG_PK PRIMARY KEY
(
  NEWS_ID
, TAG_ID
)
ENABLE;